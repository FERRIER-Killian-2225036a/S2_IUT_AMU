SÃ©ance 4:
Q1: 
	select IdT, libelle
	from Theme
	where IdT not in (
		select IdTPere
		from theme
		where IdTPere is not null);
Q2:
	select IdT, Libelle
	from Theme
	connect by IdT = prior IdTPere
	start with Libelle = 'JOINTURE EXTERNE'
	order by level desc;
Q3: 
	select IdT, Libelle
	from Theme
	where IdTPere is null;
Q4:
	select IdT, Libelle
	from Theme
	connect by prior IdT = IdTPere
	start with Libelle = 'LANGAGE DE REQUETES';
Q5:
	select idt,libelle 
	from theme 
	connect by prior idT = idTPere 
	and Libelle <> 'JOINTURE IMBRIQUEE'
	start with libelle = 'JOINTURE';
Q6:
	select idt, libelle
	from theme
	connect by prior idt = itdtpere
	where libelle <> 'JOINTURE IMBRIQUEE'
	start with libelle = 'JOINTURE';
Q7:
	SELECT QUESTION.IdQ , NumTP
	FROM QUESTION, THEMQUEST
	WHERE QUESTION.IdQ = THEMQUEST.IdQ AND IdT IN
	(SELECT IdT
	FROM THEME
	CONNECT BY PRIOR IdT = IdTPere
	START WITH Libelle = 'Jointure');
Q8:
	select distinct idt , libelle
	from theme
	connect by idt = prior idtpere
	start with libelle in ('JOINTURE','SELECT SIMPLE');
Q9:
	select idT,Libelle
	from theme
	connect by idt = prior idtpere
	start with libelle = 'JOINTURE'
	intersect
	select idT,Libelle
	from theme
	connect by idt = prior idtpere
	start with libelle = 'SELECTION SIMPLE'
Q9':
	select idt,libelle
	from theme
	where idt in ( select distinct idt from theme connect by idt = prior idtpere
	start with libelle = 'selection simple' )
	connect by idt = prior idtpere
	start with libelle ='jointure';
Q10:
	select IdT, Libelle
	from Theme
	where IdT not in (select IdT from ThemeQuest)
	connect by prior IdT = IdTPere
	start with Libelle = 'SQL LDD';
Q11:
	select IdT, Libelle
	from Theme
	where IdT not in (select IdTPere from Theme where IdTPere is not null)
	connect by prior IdT = IdTPere
	start with IdT in;
Q12:
	select IdT, libelle, - (level-1)
	from THEME 
	connect by idt= prior idtpere
	start with libelle = 'JOINTURE'
	union
	select idT,libelle , level-1
	from theme
	connect by prior idt=idtpere
	start with libelle = 'JOINTURE';
Q13:
	select ETUDIANT.numet, nom,prenom
	from ETUDIANT,EVALUATION, QUESTION
	where ETUDIANT.numet = EVALUATION.numet and EVALUATION.IdQ = QUESTION.IdQ and
	numTp=1
	group by ETUDIANT.numet, nom,prenom 
	having count (*) = (select count(*) from question where numTp =1);
Q13':
	select numEt,nom,prenom 
	from etudiant E
	where not exists (
	    select * 
	    from question q 
	    where numtp = 1 and not exists (
	        select * 
	        from evaluation 
	        where E.numet= evaluation.numet 
	        and evaluation.idq = q.idq));
Q14:
	select groupe from etudiant
	group by groupe
	having count(distinct  typebac) = (select count(distinct typebac) from etudiant);